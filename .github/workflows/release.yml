name: Release Management

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest

    outputs:
      release-id: ${{ steps.create-release.outputs.id }}
      upload-url: ${{ steps.create-release.outputs.upload_url }}
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Extract version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=${GITHUB_REF#refs/tags/}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Run tests
        run: npm run test:coverage

      - name: Build applications
        run: npm run build

      - name: Generate changelog
        id: changelog
        run: |
          cat > CHANGELOG.md << 'EOF'
          # Changelog for ${{ steps.version.outputs.version }}

          ## What's Changed

          ### 🚀 Features
          - AI-powered email content generation
          - Advanced lead management system
          - Real-time analytics dashboard
          - Email automation pipelines

          ### 🐛 Bug Fixes
          - Improved error handling
          - Enhanced security measures
          - Performance optimizations

          ### 📚 Documentation
          - Complete API documentation
          - Comprehensive setup guide
          - Contributing guidelines

          ### 🔧 Technical Improvements
          - Upgraded dependencies
          - Enhanced test coverage
          - Improved CI/CD pipeline

          ## Installation

          ```bash
          git clone https://github.com/aimnovo/email-marketing.git
          cd email-marketing
          npm install
          npm run dev
          ```

          ## Commercial Use

          This release is licensed under MIT License and is ready for commercial use.
          Please maintain proper attribution to Muhammad Ismail (ismail@aimnovo.com).

          ## Support

          - 📧 Email: ismail@aimnovo.com
          - 🌐 Website: https://aimnovo.com
          - 🤖 AI Platform: https://aimnexus.ai

          ---

          **Full Changelog**: https://github.com/aimnovo/email-marketing/commits/${{ steps.version.outputs.version }}
          EOF

      - name: Create Release
        id: create-release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: AI Email Marketing System ${{ steps.version.outputs.version }}
          body_path: CHANGELOG.md
          draft: false
          prerelease: false

      - name: Create build archive
        run: |
          tar -czf dist.tar.gz apps/*/dist 2>/dev/null || echo "No dist directories found"

      - name: Upload build artifacts
        if: steps.create-release.outputs.upload_url != ''
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.version.outputs.version }}
          files: |
            dist.tar.gz

  build-docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: create-release

    strategy:
      matrix:
        image: [api, web]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.image }}
          tags: |
            type=ref,event=tag
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/${{ matrix.image }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-docs:
    name: Update Documentation
    runs-on: ubuntu-latest
    needs: [create-release, build-docker]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Generate documentation
        run: |
          # Update version in documentation
          sed -i 's/Version: .*/Version: ${{ needs.create-release.outputs.version }}/' docs/index.html

          # Update release notes
          cat > docs/releases/${{ needs.create-release.outputs.version }}.md << 'EOF'
          # Release ${{ needs.create-release.outputs.version }}

          Released on $(date +%Y-%m-%d)

          ## Installation

          ### Using Docker
          ```bash
          docker pull ghcr.io/${{ github.repository }}/api:${{ needs.create-release.outputs.version }}
          docker pull ghcr.io/${{ github.repository }}/web:${{ needs.create-release.outputs.version }}
          ```

          ### From Source
          ```bash
          git clone https://github.com/${{ github.repository }}.git
          cd email-marketing
          git checkout ${{ needs.create-release.outputs.version }}
          npm install
          npm run build
          ```

          ## What's New

          This release includes major improvements in AI content generation,
          enhanced security features, and better performance optimizations.

          See the [full changelog](https://github.com/${{ github.repository }}/releases/tag/${{ needs.create-release.outputs.version }}) for details.
          EOF

      - name: Commit documentation updates
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add docs/
          git commit -m "docs: update documentation for ${{ needs.create-release.outputs.version }}" || exit 0
          git push

  notify:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: [create-release, build-docker, update-docs]
    if: always()

    steps:
      - name: Success notification
        if: needs.create-release.result == 'success' && needs.build-docker.result == 'success'
        run: |
          echo "🎉 Release ${{ needs.create-release.outputs.version }} created successfully!"
          echo "📦 Docker images published"
          echo "📚 Documentation updated"
          echo "🔗 Release URL: https://github.com/${{ github.repository }}/releases/tag/${{ needs.create-release.outputs.version }}"

      - name: Failure notification
        if: needs.create-release.result == 'failure' || needs.build-docker.result == 'failure'
        run: |
          echo "❌ Release process failed!"
          echo "Please check the workflow logs for details."
          exit 1
